"use strict";(self.webpackChunkstory=self.webpackChunkstory||[]).push([[202],{"./src/stories/ProgressBar/ProgressBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Complete:()=>Complete,CustomRange:()=>CustomRange,Default:()=>Default,Empty:()=>Empty,Half:()=>Half,Interactive:()=>Interactive,Quarter:()=>Quarter,RightToLeft:()=>RightToLeft,Showcase:()=>Showcase,ThreeQuarters:()=>ThreeQuarters,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ProgressBar_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),bundle_mjs=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const ProgressBar=react.forwardRef((({value,max=100,min=0,rtl=!1,className,"aria-label":ariaLabel,"aria-describedby":ariaDescribedby,...props},ref)=>{const clampedValue=Math.max(min,Math.min(max,value)),percentage=(clampedValue-min)/(max-min)*100;return(0,jsx_runtime.jsx)("div",{ref,role:"progressbar","aria-valuenow":clampedValue,"aria-valuemin":min,"aria-valuemax":max,"aria-label":ariaLabel,"aria-describedby":ariaDescribedby,className:(0,bundle_mjs.QP)("relative w-full overflow-hidden","bg-pz-system-bg-4 rounded-pz-max h-1.5",className),...props,children:(0,jsx_runtime.jsx)("div",{className:(0,bundle_mjs.QP)("h-full transition-all duration-300 ease-out rounded-pz-max","bg-pz-blue-500",rtl?"ml-auto":""),style:{width:`${percentage}%`}})})}));ProgressBar.displayName="ProgressBar",ProgressBar.__docgenInfo={description:"",methods:[],displayName:"ProgressBar",props:{value:{required:!0,tsType:{name:"number"},description:"Current progress value"},max:{required:!1,tsType:{name:"number"},description:"Maximum value (default: 100)",defaultValue:{value:"100",computed:!1}},min:{required:!1,tsType:{name:"number"},description:"Minimum value (default: 0)",defaultValue:{value:"0",computed:!1}},rtl:{required:!1,tsType:{name:"boolean"},description:"Right-to-left direction",defaultValue:{value:"false",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class"},"aria-label":{required:!1,tsType:{name:"string"},description:"Accessible label"},"aria-describedby":{required:!1,tsType:{name:"string"},description:"Accessible description"}}};const ProgressBar_stories={title:"Component/ProgressBar",component:ProgressBar,args:{value:50,max:100,min:0,rtl:!1},parameters:{layout:"centered",docs:{source:{state:"open"}}},tags:["autodocs"],argTypes:{value:{control:{type:"range",min:0,max:100,step:1},description:"Current progress value",table:{category:"Content"}},max:{control:{type:"number",min:1,step:1},description:"Maximum value",table:{category:"Content",defaultValue:{summary:"100"}}},min:{control:{type:"number",min:0,step:1},description:"Minimum value",table:{category:"Content",defaultValue:{summary:"0"}}},rtl:{control:"boolean",description:"Right-to-left direction",table:{category:"Appearance",defaultValue:{summary:"false"}}},className:{control:"text",description:"Additional CSS class",table:{category:"Styling"}},"aria-label":{control:"text",description:"Accessible label",table:{category:"Accessibility"}}}},Default={args:{},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},Empty={args:{value:0,"aria-label":"Loading progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},Quarter={args:{value:25,"aria-label":"Loading progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},Half={args:{value:50,"aria-label":"Loading progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},ThreeQuarters={args:{value:75,"aria-label":"Loading progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},Complete={args:{value:100,"aria-label":"Loading progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},RightToLeft={args:{value:60,rtl:!0,"aria-label":"Loading progress (RTL)"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},CustomRange={args:{value:150,min:100,max:200,"aria-label":"Custom range progress"},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:"300px"},children:(0,jsx_runtime.jsx)(ProgressBar,{...args})})},Showcase={render:()=>(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"24px",width:"400px"},children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{style:{marginBottom:"8px",fontSize:"14px",fontWeight:"500"},children:"Different Progress Values"}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"0%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:0,"aria-label":"0% progress"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"25%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:25,"aria-label":"25% progress"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"50%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:50,"aria-label":"50% progress"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"75%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:75,"aria-label":"75% progress"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"100%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:100,"aria-label":"100% progress"})]})]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{style:{marginBottom:"8px",fontSize:"14px",fontWeight:"500"},children:"Right-to-Left Direction"}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"RTL 30%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:30,rtl:!0,"aria-label":"30% progress (RTL)"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"RTL 70%"}),(0,jsx_runtime.jsx)(ProgressBar,{value:70,rtl:!0,"aria-label":"70% progress (RTL)"})]})]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{style:{marginBottom:"8px",fontSize:"14px",fontWeight:"500"},children:"Custom Range (0-200)"}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"Value: 50 (25% of range)"}),(0,jsx_runtime.jsx)(ProgressBar,{value:50,min:0,max:200,"aria-label":"50 out of 200"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("span",{style:{fontSize:"12px",color:"#666",marginBottom:"4px",display:"block"},children:"Value: 150 (75% of range)"}),(0,jsx_runtime.jsx)(ProgressBar,{value:150,min:0,max:200,"aria-label":"150 out of 200"})]})]})]})]})},Interactive={render:()=>{const[progress,setProgress]=react.useState(0);return react.useEffect((()=>{const timer=setInterval((()=>{setProgress((prev=>prev>=100?0:prev+1))}),100);return()=>clearInterval(timer)}),[]),(0,jsx_runtime.jsxs)("div",{style:{width:"300px"},children:[(0,jsx_runtime.jsxs)("div",{style:{marginBottom:"8px",fontSize:"14px",color:"#666"},children:["Progress: ",progress,"%"]}),(0,jsx_runtime.jsx)(ProgressBar,{value:progress,"aria-label":`Loading progress: ${progress}%`})]})}},__namedExportsOrder=["Default","Empty","Quarter","Half","ThreeQuarters","Complete","RightToLeft","CustomRange","Showcase","Interactive"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...Default.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 0,\n    "aria-label": "Loading progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...Empty.parameters?.docs?.source}}},Quarter.parameters={...Quarter.parameters,docs:{...Quarter.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 25,\n    "aria-label": "Loading progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...Quarter.parameters?.docs?.source}}},Half.parameters={...Half.parameters,docs:{...Half.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 50,\n    "aria-label": "Loading progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...Half.parameters?.docs?.source}}},ThreeQuarters.parameters={...ThreeQuarters.parameters,docs:{...ThreeQuarters.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 75,\n    "aria-label": "Loading progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...ThreeQuarters.parameters?.docs?.source}}},Complete.parameters={...Complete.parameters,docs:{...Complete.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 100,\n    "aria-label": "Loading progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...Complete.parameters?.docs?.source}}},RightToLeft.parameters={...RightToLeft.parameters,docs:{...RightToLeft.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 60,\n    rtl: true,\n    "aria-label": "Loading progress (RTL)"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...RightToLeft.parameters?.docs?.source}}},CustomRange.parameters={...CustomRange.parameters,docs:{...CustomRange.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 150,\n    min: 100,\n    max: 200,\n    "aria-label": "Custom range progress"\n  },\n  render: args => <div style={{\n    width: "300px"\n  }}>\n      <ProgressBar {...args} />\n    </div>\n}',...CustomRange.parameters?.docs?.source}}},Showcase.parameters={...Showcase.parameters,docs:{...Showcase.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    display: "flex",\n    flexDirection: "column",\n    gap: "24px",\n    width: "400px"\n  }}>\n      <div>\n        <h3 style={{\n        marginBottom: "8px",\n        fontSize: "14px",\n        fontWeight: "500"\n      }}>\n          Different Progress Values\n        </h3>\n        <div style={{\n        display: "flex",\n        flexDirection: "column",\n        gap: "12px"\n      }}>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              0%\n            </span>\n            <ProgressBar value={0} aria-label="0% progress" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              25%\n            </span>\n            <ProgressBar value={25} aria-label="25% progress" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              50%\n            </span>\n            <ProgressBar value={50} aria-label="50% progress" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              75%\n            </span>\n            <ProgressBar value={75} aria-label="75% progress" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              100%\n            </span>\n            <ProgressBar value={100} aria-label="100% progress" />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <h3 style={{\n        marginBottom: "8px",\n        fontSize: "14px",\n        fontWeight: "500"\n      }}>\n          Right-to-Left Direction\n        </h3>\n        <div style={{\n        display: "flex",\n        flexDirection: "column",\n        gap: "12px"\n      }}>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              RTL 30%\n            </span>\n            <ProgressBar value={30} rtl aria-label="30% progress (RTL)" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              RTL 70%\n            </span>\n            <ProgressBar value={70} rtl aria-label="70% progress (RTL)" />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <h3 style={{\n        marginBottom: "8px",\n        fontSize: "14px",\n        fontWeight: "500"\n      }}>\n          Custom Range (0-200)\n        </h3>\n        <div style={{\n        display: "flex",\n        flexDirection: "column",\n        gap: "12px"\n      }}>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              Value: 50 (25% of range)\n            </span>\n            <ProgressBar value={50} min={0} max={200} aria-label="50 out of 200" />\n          </div>\n          <div>\n            <span style={{\n            fontSize: "12px",\n            color: "#666",\n            marginBottom: "4px",\n            display: "block"\n          }}>\n              Value: 150 (75% of range)\n            </span>\n            <ProgressBar value={150} min={0} max={200} aria-label="150 out of 200" />\n          </div>\n        </div>\n      </div>\n    </div>\n}',...Showcase.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [progress, setProgress] = React.useState(0);\n    React.useEffect(() => {\n      const timer = setInterval(() => {\n        setProgress(prev => {\n          if (prev >= 100) {\n            return 0;\n          }\n          return prev + 1;\n        });\n      }, 100);\n      return () => clearInterval(timer);\n    }, []);\n    return <div style={{\n      width: "300px"\n    }}>\n        <div style={{\n        marginBottom: "8px",\n        fontSize: "14px",\n        color: "#666"\n      }}>\n          Progress: {progress}%\n        </div>\n        <ProgressBar value={progress} aria-label={`Loading progress: ${progress}%`} />\n      </div>;\n  }\n}',...Interactive.parameters?.docs?.source}}}}}]);